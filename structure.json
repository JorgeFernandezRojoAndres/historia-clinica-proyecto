{
  "app": {
    "views": {
      "newCita.pug": "extends layout\n\nblock content\n  h2 Nueva Cita\n\n  form(action=\"/citas/new\" method=\"POST\")\n    //- Selector de Especialidades\n    label(for=\"especialidadSelector\") Especialidad:\n    select(name=\"especialidadSelector\" id=\"especialidadSelector\")\n      option(value=\"\") -- Selecciona una especialidad --\n      each especialidad in especialidades\n        option(value=especialidad.nombre) #{especialidad.nombre}\n    br\n\n    //- Selector de Médicos\n    label(for=\"idMedico\") Médico:\n    select(name=\"idMedico\" id=\"idMedico\" required)\n      option(value=\"\") -- Selecciona un médico --\n    br\n\n    label(for=\"especialidadMedico\") Especialidad del Médico:\n    input(type=\"text\" id=\"especialidadMedico\" readonly)\n    br\n\n    //- Campo de paciente\n    label(for=\"buscarPaciente\") Buscar Paciente:\n    if nombrePaciente\n      input(type=\"text\" id=\"buscarPaciente\" name=\"nombrePaciente\" value=nombrePaciente readonly)\n      input(type=\"hidden\" name=\"idPaciente\" value=idPaciente)\n    else\n      input(type=\"text\" id=\"buscarPaciente\" placeholder=\"Ingresa nombre o DNI\" autocomplete=\"off\" required)\n      input(type=\"hidden\" name=\"idPaciente\" id=\"idPaciente\")\n\n    // Este es el contenedor para las sugerencias de autocompletado\n    ul#listaResultados(style=\"border: 1px solid #ddd; padding: 5px; max-height: 150px; overflow-y: auto; position: absolute; background: white; width: 200px; z-index: 1000; display: none;\")\n\n    //- Botón para ver la agenda del médico seleccionado\n    a#verAgendaButton.btn.btn-primary(href=\"#\") Ver Agenda del Médico\n\n    label(for=\"fechaHora\") Fecha y Hora:\n    input(type=\"datetime-local\" name=\"fechaHora\" id=\"fechaHora\" required)\n    br\n\n    label(for=\"motivoConsulta\") Motivo de Consulta:\n    input(type=\"text\" name=\"motivoConsulta\" required)\n    br\n\n    //- Selector de Tipo de Turno\n    label(for=\"tipoTurno\") Tipo de Turno:\n    select(name=\"tipoTurno\" id=\"tipoTurno\" required)\n      option(value=\"regular\") Regular\n      option(value=\"sobreturno\") Sobreturno\n    br\n\n    button(type=\"submit\") Crear Cita\n\nscript(src=\"/utils/selectorMedico.js\")\nscript.\n  document.addEventListener('DOMContentLoaded', function() {\n    const especialidadSelector = document.getElementById('especialidadSelector');\n    const medicoSelector = document.getElementById('idMedico');\n    const verAgendaButton = document.getElementById('verAgendaButton');\n    const medicos = !{JSON.stringify(medicos)};\n    const buscarPacienteInput = document.getElementById('buscarPaciente');\n    const listaResultados = document.getElementById('listaResultados');\n\n    // Evento para filtrar médicos por especialidad\n    especialidadSelector.addEventListener('change', function() {\n      const especialidadSeleccionada = this.value;\n      medicoSelector.innerHTML = '<option value=\"\">-- Selecciona un médico --</option>';\n      \n      medicos.forEach(medico => {\n        if (medico.especialidad === especialidadSeleccionada) {\n          const option = document.createElement('option');\n          option.value = medico.idMedico;\n          option.textContent = medico.nombre;\n          option.setAttribute('data-especialidad', medico.especialidad);\n          medicoSelector.appendChild(option);\n        }\n      });\n    });\n\n    // Cambiar la especialidad del médico seleccionado\n    medicoSelector.addEventListener('change', function() {\n      const medicoSeleccionado = this.options[this.selectedIndex];\n      const medicoId = medicoSeleccionado.value;\n\n      document.getElementById('especialidadMedico').value = medicoSeleccionado.getAttribute('data-especialidad') || '';\n\n      if (medicoId) {\n        verAgendaButton.href = `/medicos/${medicoId}/agenda`;\n        verAgendaButton.style.display = 'inline-block'; // Mostrar botón solo si se selecciona un médico\n      } else {\n        verAgendaButton.style.display = 'none'; // Ocultar botón si no hay médico seleccionado\n      }\n    });\n\n    // Autocompletado para Buscar Paciente\n    buscarPacienteInput.addEventListener('input', async function() {\n      const query = buscarPacienteInput.value.trim();\n      if (query.length > 0) {\n        try {\n          const response = await fetch(`/citas/buscar-paciente?term=${query}`);\n          const pacientes = await response.json();\n          mostrarResultados(pacientes);\n        } catch (error) {\n          console.error('Error al buscar pacientes:', error);\n        }\n      } else {\n        listaResultados.style.display = 'none'; // Ocultar si no hay query\n      }\n    });\n\n    function mostrarResultados(pacientes) {\n      listaResultados.innerHTML = ''; // Limpiar resultados anteriores\n      if (pacientes.length > 0) {\n        listaResultados.style.display = 'block'; // Mostrar el contenedor de resultados\n        pacientes.forEach(paciente => {\n          const li = document.createElement('li');\n          li.textContent = `${paciente.nombre} (ID: ${paciente.idPaciente})`;\n          li.style.cursor = 'pointer';\n          li.addEventListener('click', () => seleccionarPaciente(paciente));\n          listaResultados.appendChild(li);\n        });\n      } else {\n        listaResultados.style.display = 'none'; // Ocultar si no hay resultados\n      }\n    }\n\n    function seleccionarPaciente(paciente) {\n      buscarPacienteInput.value = paciente.nombre;\n      listaResultados.style.display = 'none'; // Ocultar resultados\n      document.getElementById('idPaciente').value = paciente.idPaciente; // Asignar ID al campo oculto\n    }\n\n    // Ocultar la lista de resultados si se hace clic fuera\n    document.addEventListener('click', function(e) {\n      if (!buscarPacienteInput.contains(e.target) && !listaResultados.contains(e.target)) {\n        listaResultados.style.display = 'none';\n      }\n    });\n  });\n"
    }
  },
  "utils": {
    "selectorMedico.js": "// Función para filtrar médicos por especialidad\r\nfunction filtrarMedicosPorEspecialidad(especialidadSelector, medicoSelector, medicos) {\r\n    especialidadSelector.addEventListener('change', function () {\r\n      const especialidadSeleccionada = this.value;\r\n      medicoSelector.innerHTML = '<option value=\"\">-- Selecciona un médico --</option>';\r\n  \r\n      medicos.forEach(medico => {\r\n        if (medico.especialidad === especialidadSeleccionada) {\r\n          const option = document.createElement('option');\r\n          option.value = medico.idMedico;\r\n          option.textContent = medico.nombre;\r\n          option.setAttribute('data-especialidad', medico.especialidad);\r\n          medicoSelector.appendChild(option);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Función para cambiar la especialidad del médico seleccionado\r\n  function cambiarEspecialidadMedico(medicoSelector, especialidadMedicoInput, verAgendaButton) {\r\n    medicoSelector.addEventListener('change', function () {\r\n      const medicoSeleccionado = this.options[this.selectedIndex];\r\n      const medicoId = medicoSeleccionado.value;\r\n  \r\n      especialidadMedicoInput.value = medicoSeleccionado.getAttribute('data-especialidad') || '';\r\n  \r\n      if (medicoId) {\r\n        verAgendaButton.href = `/medicos/${medicoId}/agenda`;\r\n        verAgendaButton.style.display = 'inline-block'; // Mostrar botón solo si se selecciona un médico\r\n      } else {\r\n        verAgendaButton.style.display = 'none'; // Ocultar botón si no hay médico seleccionado\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Función para configurar el autocompletado de pacientes\r\n  async function configurarAutocompletadoPaciente(buscarPacienteInput, listaResultados) {\r\n    buscarPacienteInput.addEventListener('input', async function () {\r\n      const query = buscarPacienteInput.value.trim();\r\n      if (query.length > 0) {\r\n        try {\r\n          const response = await fetch(`/citas/buscar-paciente?term=${query}`);\r\n          const pacientes = await response.json();\r\n          mostrarResultados(pacientes, listaResultados);\r\n        } catch (error) {\r\n          console.error('Error al buscar pacientes:', error);\r\n        }\r\n      } else {\r\n        listaResultados.style.display = 'none'; // Ocultar si no hay query\r\n      }\r\n    });\r\n  \r\n    function mostrarResultados(pacientes, listaResultados) {\r\n      listaResultados.innerHTML = ''; // Limpiar resultados anteriores\r\n      if (pacientes.length > 0) {\r\n        listaResultados.style.display = 'block'; // Mostrar el contenedor de resultados\r\n        pacientes.forEach(paciente => {\r\n          const li = document.createElement('li');\r\n          li.textContent = `${paciente.nombre} (ID: ${paciente.idPaciente})`;\r\n          li.style.cursor = 'pointer';\r\n          li.addEventListener('click', () => seleccionarPaciente(paciente, buscarPacienteInput, listaResultados));\r\n          listaResultados.appendChild(li);\r\n        });\r\n      } else {\r\n        listaResultados.style.display = 'none'; // Ocultar si no hay resultados\r\n      }\r\n    }\r\n  \r\n    function seleccionarPaciente(paciente, buscarPacienteInput, listaResultados) {\r\n      buscarPacienteInput.value = paciente.nombre;\r\n      listaResultados.style.display = 'none'; // Ocultar resultados\r\n      document.getElementById('idPaciente').value = paciente.idPaciente; // Asignar ID al campo oculto\r\n    }\r\n  \r\n    // Ocultar la lista de resultados si se hace clic fuera\r\n    document.addEventListener('click', function (e) {\r\n      if (!buscarPacienteInput.contains(e.target) && !listaResultados.contains(e.target)) {\r\n        listaResultados.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Función para manejar la selección de la clínica\r\n  function configurarSeleccionClinica(btnSelectClinic, modalId) {\r\n    btnSelectClinic.onclick = function () {\r\n      document.getElementById(modalId).style.display = 'block';\r\n    };\r\n  }\r\n  \r\n  module.exports = {\r\n    filtrarMedicosPorEspecialidad,\r\n    cambiarEspecialidadMedico,\r\n    configurarAutocompletadoPaciente,\r\n    configurarSeleccionClinica\r\n  };\r\n  "
  }
}